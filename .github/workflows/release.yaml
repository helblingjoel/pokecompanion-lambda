name: Release Workflow

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install dependencies
        run: npm install

      - name: Remove sqs sdk
        run: npm rm @aws-sdk/client-sqs

      - name: Create redeploy .zip file
        run: zip -r redeploy.zip redeploy.js utils.js pocketbase.js LICENSE node_modules/ package.json package-lock.json

      - name: Create worker .zip file
        run: zip -r worker.zip worker.js utils.js pocketbase.js LICENSE node_modules/ package.json package-lock.json

      - name: Add sqs sdk
        run: npm i @aws-sdk/client-sqs

      - name: Create supervisor .zip file
        run: zip -r supervisor.zip supervisor.js utils.js pocketbase.js LICENSE node_modules/ package.json package-lock.json

      - name: Run semantic-release and capture version
        id: semantic_release
        run: |
          version=$(npx semantic-release --dry-run | grep 'The next release version is' | grep -oE '[0-9]+\.[0-9]+\.[0-9]+')
          echo "release_version=$version" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: Run semantic-release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ github.token }}

      # Sync to S3 so it can be linked to Lambdas

      - name: Upload redeploy to s3
        uses: ricardoapaes/action-s3-upload@main
        env:
          AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: helblinglilly-pokecompanion
          filename: lambdas/releases/${{ env.release_version }}/redeploy.zip
          src: redeploy.zip
          region: eu-west-2
      
      - name: Upload supervisor to s3
        uses: ricardoapaes/action-s3-upload@main
        env:
          AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: helblinglilly-pokecompanion
          filename: lambdas/releases/${{ env.release_version }}/supervisor.zip
          src: supervisor.zip
          region: eu-west-2

      - name: Upload worker to s3
        uses: ricardoapaes/action-s3-upload@main
        env:
          AWS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: helblinglilly-pokecompanion
          filename: lambdas/releases/${{ env.release_version }}/worker.zip
          src: worker.zip
          region: eu-west-2
